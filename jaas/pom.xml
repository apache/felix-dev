<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">


  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.felix</groupId>
    <artifactId>felix-parent</artifactId>
    <version>3</version>
    <relativePath>../pom/pom.xml</relativePath>
  </parent>

  <artifactId>org.apache.felix.jaas</artifactId>
  <version>1.0.3-SNAPSHOT</version>
  <packaging>bundle</packaging>

  <name>Apache Felix JAAS Support</name>
  <description>
    Bundle to simplify JAAS usage within OSGi environment. Refer to http://felix.apache.org/documentation/subprojects/apache-felix-jaas.html
    for more details
  </description>

  <scm>
    <connection>scm:git:https://github.com/apache/felix-dev.git</connection>
    <developerConnection>scm:git:https://github.com/apache/felix-dev.git</developerConnection>
    <url>https://gitbox.apache.org/repos/asf?p=felix-dev.git</url>
  </scm>

  <properties>
    <pax-exam.version>3.0.0</pax-exam.version>
    <bundle.build.name>
      ${basedir}/target
    </bundle.build.name>
    <bundle.file.name>
      ${bundle.build.name}/${project.build.finalName}.jar
    </bundle.file.name>
    <bundle.boot.file>
      ${bundle.build.name}/${project.build.finalName}-boot.jar
    </bundle.boot.file>
    <felix.java.version>6</felix.java.version>
  </properties>

  <build>
    <plugins>
      <!--
          We do not use DS but the SCR plugin is used to generate the
          metatype.xml from the SCR annotations
      -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-scr-plugin</artifactId>
        <version>1.7.4</version>
        <executions>
          <execution>
            <id>generate-scr-scrdescriptor</id>
            <goals>
              <goal>scr</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.5.1</version>
        <!-- We use the new JDK 1.6 ConfigurationSpi API so can set the version to 1.6-->
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.3.7</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>
              ${project.artifactId}
            </Bundle-SymbolicName>
            <Bundle-Vendor>
              The Apache Software Foundation
            </Bundle-Vendor>
            <Bundle-DocURL>
              http://felix.apache.org/documentation/subprojects/apache-felix-jaas.html
            </Bundle-DocURL>
            <Bundle-Activator>
              org.apache.felix.jaas.internal.Activator
            </Bundle-Activator>
            <DynamicImport-Package>
              javax.servlet,
              javax.servlet.http
            </DynamicImport-Package>
            <_removeheaders>
              Embed-Dependency,Private-Package,Include-Resource
            </_removeheaders>
            <Embed-Dependency>
              org.apache.sling.commons.osgi;inline=
              org/apache/sling/commons/osgi/PropertiesUtil*.class|
              org/apache/sling/commons/osgi/ManifestHeader*.class
            </Embed-Dependency>
          </instructions>
        </configuration>
      </plugin>
      <!-- Create jar which can be put in boot classpath to enable use of
      ProxyLoginModule in normal JAAS mode of authentication -->
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>boot-library</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <classifier>boot</classifier>
              <includes>
                <include>org/apache/felix/jaas/boot/*.class</include>
                <include>META-INF/NOTICE</include>
                <include>META-INF/DEPENDENCIES</include>
                <include>META-INF/LICENSE</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Required for pax exam-->
      <plugin>
        <groupId>org.apache.servicemix.tooling</groupId>
        <artifactId>depends-maven-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <id>generate-depends-file</id>
            <goals>
              <goal>generate-depends-file</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- integration tests run with pax-exam -->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.12</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <systemPropertyVariables>
            <project.bundle.file>${bundle.file.name}</project.bundle.file>
            <project.boot.file>${bundle.file.name}</project.boot.file>
            <coverage.command>${coverage.command}</coverage.command>
            =
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <!--suppress MavenModelInspection -->
          <encoding>${project.build.sourceEncoding}</encoding>
          <excludePackageNames>*.internal</excludePackageNames>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
      <version>4.2.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>4.2.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>biz.aQute.bnd</groupId>
      <artifactId>bnd</artifactId>
      <version>2.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.scr.annotations</artifactId>
      <version>1.6.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.commons.osgi</artifactId>
      <version>2.2.0</version>
      <scope>provided</scope>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.framework</artifactId>
      <version>5.4.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.testing.osgi-mock</artifactId>
      <version>2.1.0</version>
      <scope>test</scope>
    </dependency>

    <!-- Pax Exam Dependencies -->
    <dependency>
      <groupId>org.ops4j.pax.exam</groupId>
      <artifactId>pax-exam-container-forked</artifactId>
      <version>${pax-exam.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.ops4j.pax.exam</groupId>
      <artifactId>pax-exam-junit4</artifactId>
      <version>${pax-exam.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.ops4j.pax.exam</groupId>
      <artifactId>pax-exam-link-mvn</artifactId>
      <version>${pax-exam.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.ops4j.pax.tinybundles</groupId>
      <artifactId>tinybundles</artifactId>
      <version>2.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.6.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.configadmin</artifactId>
      <version>1.6.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.http.bundle</artifactId>
      <version>2.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <!--
        copy the package such that IDEs may easily use it without
        setting the system property
    -->
    <profile>
      <id>ide</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>jaas-file-create</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy file="${project.build.directory}/${project.build.finalName}.jar" tofile="${project.build.directory}/jaas.jar" />
                    <copy file="${project.build.directory}/${project.build.finalName}-boot.jar" tofile="${project.build.directory}/jaas-boot.jar" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.6.2.201302030002</version>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <propertyName>coverage.command</propertyName>
                  <includes>
                    <include>org.apache.felix.jaas.*</include>
                  </includes>
                  <excludes>
                    <exclude>org.apache.felix.jaas.integration.*</exclude>
                  </excludes>
                </configuration>
              </execution>
              <execution>
                <id>report</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <skip>true</skip>
                  <check>
                    <classRatio>100</classRatio>
                    <instructionRatio>90</instructionRatio>
                    <methodRatio>95</methodRatio>
                    <branchRatio>85</branchRatio>
                    <complexityRatio>85</complexityRatio>
                    <lineRatio>90</lineRatio>
                  </check>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
